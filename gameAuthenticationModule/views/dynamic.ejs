<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>CodePen - Auth Form Bootstrap</title>
    <link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css'>
    <link rel="stylesheet" href="stylesheets/style.css">

</head>

<body>
    <!-- partial:index.partial.html -->
    <div id="main-container" class="container-fluid">
        <div class="row">
            <div id="auth-form" class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">Auth Form</h3>
                </div>
                <div class="panel-body" action="/pagelogin" method="POST" id="login">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-user"></span>
                        </span>
                        <input type="text" id="username" name="username" class="form-control" placeholder="Login">
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-lock"></span>
                        </span>
                        <input type="password" id="password" name="password" class="form-control"
                            placeholder="Password">
                    </div>
                    <button type="submit" class="btn btn-primary" id='loginBnt'>Login</button>
                </div>
            </div>
        </div>
    </div>
    <!-- partial -->
    <script>
        // Get Merchant ID from Parent
        var merchantId


        // if not merchantID -> Request sent from GameAuthenticationModule then using default merchantID of GAME
        // must be update here
        if (window.self === window.top) {
            merchantID = "0000"
        } else {
            // in an iframe (or other frames), act accordingly
            // Listen to messages from parent window
            bindEvent(window, 'message', function (e) {
                console.info(e.data)
                merchantID = JSON.parse(e.data).merchantID
            });
        }

        loginBnt = document.getElementById('loginBnt')
        loginBnt.addEventListener('click', (evt) => {
            // console.log(evt)
            sendObj = {
                username: document.getElementById('username').value,
                password: document.getElementById('password').value,
                merchantID: merchantID
            }

            doAjax({
                url: '/login'
                , contentType: "application/json"
                , payload: JSON.stringify(sendObj)
                , handler: function (response) {
                    console.log(response)
                    // Store JWT 1 to Storage then change windows.location to portal
                    // console.log(typeof(response)). Must be improved here for security concert
                    localStorage.setItem("jwt1", response);                   

                    window.parent.postMessage(response, "*")

                    window.location.replace("/portal");

                }
            })

        })

        function doAjax(request) {
            var ajax = new XMLHttpRequest();
            ajax.open("POST", request.url, false)
            ajax.setRequestHeader("Content-type", request.contentType)
            ajax.onreadystatechange = function () {
                if (ajax.readyState == 4) {
                    if(ajax.status === 200){
                        request.handler.call(request, ajax.responseText)
                    }else{
                        console.log('Error', ajax.statusText)
                    }
                    
                }
            }
            ajax.send(request.payload)
        }


        // window.addEventListener("message", receiveMessage, false);

        // function receiveMessage(evt) {
        //     console.log(evt)
        //     if (event.origin !== "localhost:3000") {
        //         return;
        //     }

        //     // ...
        // }

        // addEventListener support for IE8
        function bindEvent(element, eventName, eventHandler) {
            if (element.addEventListener) {
                element.addEventListener(eventName, eventHandler, false);
            } else if (element.attachEvent) {
                element.attachEvent('on' + eventName, eventHandler);
            }
        }


    </script>
    <!-- <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script> -->
    <!-- <script src='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js'></script> -->
</body>

</html>